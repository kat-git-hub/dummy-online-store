name: linter-check

on: push

jobs:
  linter-check:
    name: Linter Check
    runs-on: ubuntu-latest
    
    services:
      selenium:
        image: selenium/standalone-chromium:latest
        ports:
          - "4444:4444"
        options: > 
          --shm-size 2g
          --volume /dev/shm:/dev/shm

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        pip3 install poetry
        make install
    
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip
        sudo wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    - name: Download ChromeDriver
      run: |
        cd ${{ github.workspace }}
        mkdir ./drivers
        CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+' | head -n1)
        echo "Chrome version: $CHROME_VERSION"
        CHROME_VERSION_MAJOR=$(echo $CHROME_VERSION | cut -d '.' -f 1)
        echo "Chrome major version: $CHROME_VERSION_MAJOR"
        CHROMEDRIVER_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)
        echo "Latest ChromeDriver version: $CHROMEDRIVER_VERSION"
        wget -N https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip -d ./drivers/
        rm chromedriver_linux64.zip
    
    - name: Lint with flake8
      run: |
        make lint
    
    # - name: Test & publish code coverage
    #   uses: paambaati/codeclimate-action@v2.7.4
    #   env:
    #     CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
    #   with:
    #     coverageCommand: make test-coverage
    #     debug: true
    - name: Download Code Climate test reporter
      run: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-reporter
        chmod +x ./cc-reporter

    - name: Prepare Code Climate test reporter
      run: ./cc-reporter before-build
      #uses: paambaati/codeclimate-action@v2.7.4
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
    
    - name: Run tests and collect coverage
      run: make test-coverage
